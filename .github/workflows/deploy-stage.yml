name: 🏗️ Stage Deployment

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-push-docker-image:
    name: 🐳 Build and Push Docker Image
    uses: ./.github/workflows/docker-image.yml
    secrets: inherit

  lint-test-security-checks:
    name: 🧪 Lint, Test and Security Check
    needs: [build-push-docker-image]
    uses: ./.github/workflows/ci-checks.yml
    secrets: inherit
    with:
      runner_image_name: ${{ needs.build-push-docker-image.outputs.runner_image_name }}

  deploy-stage:
    name: 🚀 Deploy Stage Infrastructure
    secrets: inherit
    needs: [build-push-docker-image, lint-test-security-checks]
    uses: ./.github/workflows/aws-terraform.yml
    with:
      docker_image: ${{ needs.build-push-docker-image.outputs.runner_image_name }}
      github_environment: ${{ vars.ENVIRONMENT_GITHUB_STAGE }}
      deployment_environment: ${{ vars.ENVIRONMENT_GITHUB_STAGE }}
      aws_region: ap-south-1
      tf_action: apply

  end-to-end-test:
    name: End to End Test
    needs: [build-push-docker-image, lint-test-security-checks, deploy-stage]
    runs-on: ${{ vars.RUNNER_OS }}
    environment: ci
    env:
      RUNNER_IMAGE_NAME: ${{ needs.build-push-docker-image.outputs.runner_image_name }}
      LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Install Node Modules
        run: make run-command-install-node-packages

      - name: 🧪 Run End to End Test
        run: make run-command-end-to-end
