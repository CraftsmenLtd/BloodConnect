name: Aws Environment Terraform

on:
  workflow_call:
    inputs:
      docker_image:
        description: 'The runner image to be used'
        required: true
        type: string
      github_environment:
        description: 'Defines the github environemnt for secrets'
        required: true
        type: string
      deployment_environment:
        description: 'Defines the deployment environemnt for makefile'
        required: true
        type: string
      tf_action:
        description: 'Terraform action to perform'
        required: true
        type: string
      tf_backend_bucket_name:
        description: 'Terraform backend bucket Name'
        required: true
        type: string
      tf_backend_bucket_key:
        description: 'Terraform backend bucket Key'
        required: true
        type: string
      tf_backend_bucket_region:
        description: 'Terraform backend bucket Region'
        required: true
        type: string
      aws_region:
        description: 'AWS region'
        required: true
        type: string
      tf_vars:
        description: 'Terraform Variables in YAML format'
        required: false
        type: string
        default: |

permissions:
  contents: read
  packages: write
  id-token: write

defaults:
  run:
    shell: bash

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  aws-terraform-env:
    name: Aws Environment Terraform
    runs-on: ubuntu-22.04
    environment: ${{ inputs.github_environment }}
    env:
      RUNNER_IMAGE_NAME: ${{ inputs.docker_image }}
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Node Modules
        run: make run-command-install-node-packages

      - name: Package Code
        run: make run-command-package-all

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ${{ inputs.aws_region }}

      - name: Set Environment Variables for Deployment
        run: |
          echo "DEPLOYMENT_ENVIRONMENT=${{ inputs.deployment_environment }}" >> $GITHUB_ENV
          echo "TF_BACKEND_BUCKET_NAME=${{ inputs.tf_backend_bucket_name }}" >> $GITHUB_ENV
          echo "TF_BACKEND_BUCKET_KEY=${{ inputs.tf_backend_bucket_key }}" >> $GITHUB_ENV
          echo "TF_BACKEND_BUCKET_REGION=${{ inputs.tf_backend_bucket_region }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ inputs.aws_region }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${{ inputs.aws_region }}" >> $GITHUB_ENV

      - name: Parse and Set Terraform Variables
        run: echo "${{ inputs.tf_vars }}" | xargs -d '\n' -I {} echo {} >> $GITHUB_ENV

      - name: Terraform Initialization
        run: make run-command-tf-init

      - name: Terraform Plan ${{ inputs.tf_action }}
        run: make run-command-tf-plan-${{ inputs.tf_action }}

      - name: Terraform ${{ inputs.tf_action }}
        run: make run-command-tf-${{ inputs.tf_action }}
