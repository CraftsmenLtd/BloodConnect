name: 📱 Mobile Deployment

on:
  workflow_dispatch:
    inputs:
      environment_group_selection:
        description: 'Select Deployment Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - 'dev'
          - 'stage'
          - 'production'
      build_selection:
        description: 'Select Expo Build Type'
        required: true
        default: 'preview'
        type: choice
        options:
          - 'preview'
          - 'production'

concurrency:
  group: ${{ github.ref }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  setup-environment:
    name: 🌱 Set Deployment Environment
    runs-on: ${{ vars.RUNNER_OS }}
    environment: ${{ github.event.inputs.environment_group_selection }}
    steps:
      - name: Set Deployment Environment
        id: set_deployment_env
        run: |
          if [[ "${{ github.event.inputs.environment_group_selection }}" == "${{ vars.DEV_GITHUB_ENVIRONMENT_GROUP }}" ]]; then
            echo "DEPLOYMENT_ENVIRONMENT=${GITHUB_REF#refs/heads/}" | tr '[:upper:]' '[:lower:]' >> "$GITHUB_OUTPUT"
          else
            echo "DEPLOYMENT_ENVIRONMENT=${{ github.event.inputs.environment_group_selection }}" >> "$GITHUB_OUTPUT"
          fi
    outputs:
      deployment_environment: ${{ steps.set_deployment_env.outputs.deployment_environment }}

  build-push-docker-image:
    name: 🐳 Build and Push Docker Image
    uses: ./.github/workflows/docker-image.yml
    secrets: inherit

  fetch-env-file:
    name: 🏗️ Prepare Env
    needs: [setup-environment, build-push-docker-image]
    environment: ${{ github.event.inputs.environment_group_selection }}
    runs-on: ${{ vars.RUNNER_OS }}
    env:
      RUNNER_IMAGE_NAME: ${{ needs.build-push-docker-image.outputs.runner_image_name }}
      DEPLOYMENT_ENVIRONMENT_GROUP: ${{ github.event.inputs.environment_group_selection }}
      DEPLOYMENT_ENVIRONMENT: ${{ needs.setup-environment.outputs.deployment_environment }}
      TF_BACKEND_BUCKET_NAME: ${{ vars.TERRAFORM_BACKEND_BUCKET_NAME }}
      TF_BACKEND_BUCKET_KEY: ${{ format('{0}/{1}.tfstate', github.event.inputs.environment_group_selection, needs.setup-environment.outputs.deployment_environment) }}
      TF_BACKEND_BUCKET_REGION: ap-south-1
      AWS_REGION: ap-south-1
    steps:
      - name: 📥 Checkout Branch
        uses: actions/checkout@v4

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: 🛠️ Initiate Terraform
        run: make run-command-tf-init

      - name: 📦 Generate Mobile Env File
        run: make run-command-prepare-mobile-env

      - name: 🔄 Fetch Google Service File From aws
        run: make run-command-fetch-google-service-file

      - name: Base64 Encode Google Service File and Save to Output
        run: echo "ENCODED_GOOGLE_SERVICE_FILE=$(base64 -w 0 clients/mobile/google-services.json)" >> $GITHUB_OUTPUT
        id: encode_google_service

      - name: 🗂️ Parse Mobile Env file Into Github Env
        run: |
          while IFS= read -r line; do
            echo "$line" >> $GITHUB_OUTPUT
          done < clients/mobile/.env
        id: set_mobile_env
    outputs:
      aws_user_pool_client_id: ${{ steps.set_mobile_env.outputs.AWS_USER_POOL_CLIENT_ID }}
      aws_user_pool_id: ${{ steps.set_mobile_env.outputs.AWS_USER_POOL_ID }}
      ap_base_url: ${{ steps.set_mobile_env.outputs.API_BASE_URL }}
      aws_cognito_domain: ${{ steps.set_mobile_env.outputs.AWS_COGNITO_DOMAIN }}
      encoded_google_services_file: ${{ steps.encode_google_service.outputs.ENCODED_GOOGLE_SERVICE_FILE }}

  launch-mobile-build:
    name: 🚀 Launch Mobile Build
    secrets: inherit
    needs: [setup-environment, build-push-docker-image, fetch-env-file]
    uses: ./.github/workflows/eas-mobile.yml
    with:
      docker_image: ${{ needs.build-push-docker-image.outputs.runner_image_name }}
      deployment_environment_group: ${{ github.event.inputs.environment_group_selection }}
      deployment_environment: ${{ needs.setup-environment.outputs.deployment_environment }}
      build_profile: ${{ github.event.inputs.build_selection }}
      aws_user_pool_client_id: ${{ needs.fetch-env-file.outputs.aws_user_pool_client_id }}
      aws_user_pool_id: ${{ needs.fetch-env-file.outputs.aws_user_pool_id }}
      api_base_url: ${{ needs.fetch-env-file.outputs.ap_base_url }}
      aws_cognito_domain: ${{ needs.fetch-env-file.outputs.aws_cognito_domain }}
      encoded_google_services_file: ${{ needs.fetch-env-file.outputs.encoded_google_services_file }}
      country: BD
