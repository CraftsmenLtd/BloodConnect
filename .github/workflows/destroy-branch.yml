name: ðŸ”¥ Branch Destruction

on:
  workflow_dispatch:
  delete:

concurrency:
  group: ${{ github.ref }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  setup-environment:
    name: ðŸŒ± Setup Environment
    runs-on: ${{ vars.RUNNER_OS }}
    environment: ${{ vars.ENVIRONMENT_GITHUB_DEV }}
    steps:
      - name: Get Branch Name
        id: set_branch_name
        run: echo "BRANCH_NAME=$(echo "${{ github.event.ref }}" | sed -E 's#refs/heads/(.*)#\1#' | awk '{print tolower($0)}')" >> $GITHUB_OUTPUT
    outputs:
      branch_name: ${{ steps.set_branch_name.outputs.branch_name }}

  destroy-terraform:
    name: ðŸ”¥ Terraform Destruction
    needs: [setup-environment]
    runs-on: ${{ vars.RUNNER_OS }}
    environment: ${{ vars.ENVIRONMENT_GITHUB_DEV }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Create Terraform Configuration
        run: |
          mkdir destroy
          cat <<EOF > destroy/main.tf
          provider "aws" {
            region = "${{ vars.AWS_DEFAULT_REGION }}"
          }

          terraform {
            backend "s3" {
              bucket         = "${{ vars.TERRAFORM_BACKEND_BUCKET_NAME }}"
              key            = "${{ vars.ENVIRONMENT_GITHUB_DEV }}/${{ needs.setup-environment.outputs.branch_name }}.tfstate"
              region         = "${{ secrets.AWS_DEFAULT_REGION }}"
            }
          }
          EOF

      - name: Terraform Init
        run: terraform init
        working-directory: destroy

      - name: Terraform Plan Destroy
        run: terraform plan --destroy
        working-directory: destroy

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: destroy
