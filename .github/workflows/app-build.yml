name: Build App

on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string
      backend_branch:
        type: string
        default: stage
        required: false
      mobile_branch:
        required: false
        default: 'master'
        type: string

  workflow_dispatch:

permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ vars.ENVIRONMENT_GITHUB_DEV }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq make
          npm install -g expo-cli eas-cli
          cd clients/mobile
          npm install

      - name: ðŸ”‘ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ap-south-1

      - name: Fetch Cognito and API Gateway Details
        run: |
          BRANCH_NAME=$(echo "${{ inputs.backend_branch }}" | sed 's/[^a-zA-Z0-9-]//g')
          echo "Branch Name: $BRANCH_NAME"

          # Fetch Cognito User Pool ID
          USER_POOL_ID=$(aws cognito-idp list-user-pools --max-results 20 | jq -r --arg name "${BRANCH_NAME}-user-pool" '.UserPools[] | select(.Name==$name) | .Id')

          # Fetch Cognito Client ID
          CLIENT_ID=$(aws cognito-idp list-user-pool-clients --user-pool-id $USER_POOL_ID --max-results 20 | jq -r --arg name "${BRANCH_NAME}-app-pool-client" '.UserPoolClients[] | select(.ClientName==$name) | .ClientId')

          # Fetch Cognito Custom Domain
          COGNITO_DOMAIN=$(aws cognito-idp describe-user-pool --user-pool-id $USER_POOL_ID | jq -r '.UserPool.Domain')
          echo $COGNITO_DOMAIN

          # Fetch API Gateway ID
          API_ID=$(aws apigateway get-rest-apis | jq -r --arg name "${BRANCH_NAME}-api" '.items[] | select(.name==$name) | .id')
          API_GATEWAY_URL="https://${API_ID}.execute-api.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/api"

          # Set API_BASE_URL based on branch
          if [ "${{ inputs.backend_branch }}" = "production" ]; then
            API_BASE_URL="bloodconnect.net"
          elif [ "${{ inputs.backend_branch }}" = "master" ]; then
            API_BASE_URL="stage.bloodconnect.net"
          else
            API_BASE_URL="${BRANCH_NAME}.bloodconnect.net"
          fi
          echo $API_BASE_URL

          # Fetch CloudFront Distribution Domain based on branch name
          echo "Fetching CloudFront distributions..."
          CLOUDFRONT_RESPONSE=$(aws cloudfront list-distributions)
          echo "CloudFront Raw Response: $CLOUDFRONT_RESPONSE"  # Debugging output

          CLOUDFRONT_DOMAIN=$(echo "$CLOUDFRONT_RESPONSE" | jq -r --arg branch "$BRANCH_NAME" '.DistributionList.Items[] | select(.Aliases.Items[] | contains($branch)) | .DomainName' 2>/dev/null || echo "")
          echo "CLOUDFRONT_DOMAIN: $CLOUDFRONT_DOMAIN"

          echo "USER_POOL_ID=$USER_POOL_ID" >> $GITHUB_ENV
          echo "CLIENT_ID=$CLIENT_ID" >> $GITHUB_ENV
          echo "API_GATEWAY_URL=$API_GATEWAY_URL" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          cd clients/mobile
          touch .env
          echo "AWS_USER_POOL_ID=$USER_POOL_ID" >> .env
          echo "AWS_USER_POOL_CLIENT_ID=$CLIENT_ID" >> .env
          echo "AWS_COGNITO_DOMAIN=your_aws_cognito_domain" >> .env
          echo "EAS_PROJECT_ID=a0b97362-72f9-428f-a2da-d16445c6193b" >> .env
          echo "API_BASE_URL=$API_GATEWAY_URL" >> .env
          echo "APP_NAME=net.bloodconnect.app" >> .env
          echo "APP_VERSION=1.0.0" >> .env
          echo "COUNTRY=BD" >> .env

      - name: Set Up Environment
        run: cd clients/mobile && make setup-env
  
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: '9cC7lgYtP-ycBKfiDVE9Snmmu_mBL40bed9cwDaY'

      - name: Upload Environment Variables to Expo
        run: |
          cd clients/mobile
          make upload-env BUILD_PROFILE=${{ inputs.build_type }}
        shell: bash
