{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "BloodconnectEnvironmentDomain": {
      "Type": "String",
      "Description": "The domain name for the BloodConnect environment"
    },
    "StaticSiteBucketDomainName": {
      "Type": "String",
      "Description": "The domain name of the static site S3 bucket"
    },
    "CloudFrontDistributionOriginId": {
      "Type": "String",
      "Description": "The origin ID for the CloudFront distribution"
    },
    "CloudFrontDistributionFailoverOriginId": {
      "Type": "String",
      "Description": "The failover origin ID for CloudFront"
    },
    "RestApiId": {
      "Type": "String",
      "Description": "The REST API ID for the API Gateway"
    },
    "CloudFrontDistributionApiGatewayOriginId": {
      "Type": "String",
      "Description": "The origin ID for the CloudFront API Gateway"
    },
    "Environment": {
      "Type": "String",
      "Description": "The environment name"
    },
    "CloudFrontHeaderResponsePolicyId": {
      "Type": "String",
      "Description": "The response headers policy ID for CloudFront"
    },
    "AcmCertificateArn": {
      "Type": "String",
      "Description": "The ACM certificate ARN for CloudFront"
    },
    "FailoverBucketDomainName": {
      "Type": "String",
      "Description": "The domain name of the failover S3 bucket"
    },
    "OAIPath": {
      "Type": "String",
      "Description": "The path for the Origin Access Identity"
    }
  },
  "Resources": {
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            {
              "Ref": "BloodconnectEnvironmentDomain"
            }
          ],
          "Enabled": true,
          "IPV6Enabled": false,
          "Comment": "CloudFront distribution for front-end site",
          "DefaultRootObject": "index.html",
          "PriceClass": "PriceClass_100",
          "Origins": [
            {
              "DomainName": {
                "Ref": "StaticSiteBucketDomainName"
              },
              "Id": {
                "Ref": "CloudFrontDistributionOriginId"
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Ref": "OAIPath"
                }
              }
            },
            {
              "DomainName": {
                "Ref": "FailoverBucketDomainName"
              },
              "Id": {
                "Ref": "CloudFrontDistributionFailoverOriginId"
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Ref": "OAIPath"
                }
              }
            },
            {
              "DomainName": {
                "Fn::Sub": "${RestApiId}.execute-api.${AWS::Region}.amazonaws.com"
              },
              "Id": {
                "Ref": "CloudFrontDistributionApiGatewayOriginId"
              },
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginSSLProtocols": ["TLSv1.2"]
              }
            }
          ],
          "OriginGroups": {
            "Quantity": 1,
            "Items": [
              {
                "Id": {
                  "Fn::Sub": "${Environment}-OriginGroupId"
                },
                "FailoverCriteria": {
                  "StatusCodes": {
                    "Quantity": 7,
                    "Items": [400, 403, 404, 500, 502, 503, 504]
                  }
                },
                "Members": {
                  "Quantity": 2,
                  "Items": [
                    {
                      "OriginId": {
                        "Ref": "CloudFrontDistributionOriginId"
                      }
                    },
                    {
                      "OriginId": {
                        "Ref": "CloudFrontDistributionFailoverOriginId"
                      }
                    }
                  ]
                }
              }
            ]
          },
          "DefaultCacheBehavior": {
            "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
            "CachedMethods": ["GET", "HEAD", "OPTIONS"],
            "TargetOriginId": {
              "Fn::Sub": "${Environment}-OriginGroupId"
            },
            "ViewerProtocolPolicy": "redirect-to-https",
            "ForwardedValues": {
              "QueryString": false,
              "Cookies": {
                "Forward": "none"
              }
            },
            "ResponseHeadersPolicyId": {
              "Ref": "CloudFrontHeaderResponsePolicyId"
            }
          },
          "CacheBehaviors": [
            {
              "PathPattern": "/api/*",
              "AllowedMethods": ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"],
              "CachedMethods": ["GET", "HEAD", "OPTIONS"],
              "TargetOriginId": {
                "Ref": "CloudFrontDistributionApiGatewayOriginId"
              },
              "ViewerProtocolPolicy": "redirect-to-https",
              "ForwardedValues": {
                "QueryString": true,
                "Cookies": {
                  "Forward": "all"
                },
                "Headers": ["Authorization"]
              },
              "MinTTL": 0,
              "DefaultTTL": 0,
              "MaxTTL": 0
            }
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Ref": "AcmCertificateArn"
            },
            "SslSupportMethod": "sni-only",
            "MinimumProtocolVersion": "TLSv1.2_2018"
          },
          "Restrictions": {
            "GeoRestriction": {
              "RestrictionType": "whitelist",
              "Locations": []
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "CloudFrontCdnDomainName": {
      "Value": {
        "Fn::GetAtt": ["CloudFrontDistribution", "DomainName"]
      }
    },
    "CloudFrontArn": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "arn:aws:cloudfront::",
            {
              "Ref": "AWS::AccountId"
            },
            ":distribution/",
            {
              "Ref": "CloudFrontDistribution"
            }
          ]
        ]
      }
    }
  }
}
